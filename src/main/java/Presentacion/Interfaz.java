/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Entidades.Hora;
import Entidades.Asignatura;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Juan
 */
public class Interfaz extends javax.swing.JFrame
{

    MainInterfaz prueba;
    private List<Asignatura> asignaturas;
    private List<Asignatura> asignaturasSeleccionadas;

    /**
     * Creates new form NewJFrame
     */
    public Interfaz()
    {
        initComponents();

        prueba = new MainInterfaz();
        asignaturas = prueba.getAsignaturas();
        asignaturasSeleccionadas = new ArrayList<>();

        pintaListaAsignaturas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AsignaturaASeleccionar = new javax.swing.JTextField();
        meterAsignatura = new javax.swing.JButton();
        coincidenAsignaturas = new javax.swing.JTextField();
        comprobarAsignaturas = new javax.swing.JButton();
        generarHorario = new javax.swing.JButton();
        borrarSeleccionadas = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaAsignaturas = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaAsignaturasSeleccionadas = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        meterAsignatura.setText("introducir asignatura");
        meterAsignatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meterAsignaturaActionPerformed(evt);
            }
        });

        comprobarAsignaturas.setText("comprobar si coinciden");
        comprobarAsignaturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprobarAsignaturasActionPerformed(evt);
            }
        });

        generarHorario.setText("generar horario");
        generarHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarHorarioActionPerformed(evt);
            }
        });

        borrarSeleccionadas.setText("borrar seleccionadas");
        borrarSeleccionadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarSeleccionadasActionPerformed(evt);
            }
        });

        listaAsignaturas.setColumns(20);
        listaAsignaturas.setRows(5);
        jScrollPane1.setViewportView(listaAsignaturas);

        listaAsignaturasSeleccionadas.setColumns(20);
        listaAsignaturasSeleccionadas.setRows(5);
        jScrollPane2.setViewportView(listaAsignaturasSeleccionadas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(meterAsignatura, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(borrarSeleccionadas, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AsignaturaASeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(generarHorario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(comprobarAsignaturas, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(coincidenAsignaturas, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(borrarSeleccionadas, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AsignaturaASeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(meterAsignatura, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(coincidenAsignaturas, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comprobarAsignaturas, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(generarHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void borrarSeleccionadasActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_borrarSeleccionadasActionPerformed
    {//GEN-HEADEREND:event_borrarSeleccionadasActionPerformed

        // TODO add your handling code here:
        prueba.borrarSeleccionadas();
        asignaturasSeleccionadas = new ArrayList<>();

        listaAsignaturasSeleccionadas.setText("");

    }//GEN-LAST:event_borrarSeleccionadasActionPerformed

    private void generarHorarioActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_generarHorarioActionPerformed
    {//GEN-HEADEREND:event_generarHorarioActionPerformed
        // TODO add your handling code here:
        List<Hora> horario = prueba.getHorario();
        VentanaHorario ventanaHorario = new VentanaHorario(horario);
        ventanaHorario.setVisible(true);
    }//GEN-LAST:event_generarHorarioActionPerformed

    private void comprobarAsignaturasActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_comprobarAsignaturasActionPerformed
    {//GEN-HEADEREND:event_comprobarAsignaturasActionPerformed
        // TODO add your handling code here:
        boolean valido = prueba.comprobarHorario();

        if (!valido)
        {
            coincidenAsignaturas.setText("coinciden");
        } else
        {
            coincidenAsignaturas.setText("no coinciden");
        }

    }//GEN-LAST:event_comprobarAsignaturasActionPerformed

    private void meterAsignaturaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_meterAsignaturaActionPerformed
    {//GEN-HEADEREND:event_meterAsignaturaActionPerformed
        // TODO add your handling code here:
        String nuevaAsignatura = AsignaturaASeleccionar.getText();
        prueba.seleccionarAsignatura(nuevaAsignatura);
        asignaturasSeleccionadas = prueba.getAsignaturasSeleccionadas();
        pintalistaAsignaturasSeleccionadas();
    }//GEN-LAST:event_meterAsignaturaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new Interfaz().setVisible(true);
            }

        });
    }

    void pintaListaAsignaturas()
    {
        String nombresAsignaturas = "";
        for (int i = 0; i < asignaturas.size(); i++)
        {
            nombresAsignaturas = nombresAsignaturas + asignaturas.get(i).getNombre() + "\n";
        }

        listaAsignaturas.setText(nombresAsignaturas);
    }

    String diaDeLaSemana(int dia)
    {
        String nombreDia = "";

        switch (dia)
        {
            case 1:
                nombreDia = "lunes";
                break;
            case 2:
                nombreDia = "martes";
                break;
            case 3:
                nombreDia = "miercoles";
                break;
            case 4:
                nombreDia = "jueves";
                break;
            default:
                nombreDia = "viernes";
                break;
        }
        
        return nombreDia;
    }



void pintalistaAsignaturasSeleccionadas()
    {
        listaAsignaturasSeleccionadas.setText("");

        for (int i = 0; i < asignaturasSeleccionadas.size(); i++)
        {
            String asignaturaActual = "";
            asignaturaActual = asignaturaActual + asignaturasSeleccionadas.get(i).getNombre() + " ";

            if (asignaturasSeleccionadas.get(i).getCuatrimestre() == 1)
            {
                asignaturaActual = asignaturaActual + "cuatrimestre 1\n";
            } else
            {
                asignaturaActual = asignaturaActual + "cuatrimestre 2\n";
            }

            asignaturaActual = asignaturaActual + "Teoria: ";

            for (int j = 0; j < asignaturasSeleccionadas.get(i).getHorarioTeoria().size(); j++)
            {
                int dia = asignaturasSeleccionadas.get(i).getHorarioTeoria().get(j).getDia();
                asignaturaActual = asignaturaActual + diaDeLaSemana( dia );
                asignaturaActual = asignaturaActual + " ";
                asignaturaActual = asignaturaActual + asignaturasSeleccionadas.get(i).getHorarioTeoria().get(j).getHInicio();
                asignaturaActual = asignaturaActual + " ";
            }

            asignaturaActual = asignaturaActual + "\nPractica: ";

            for (int j = 0; j < asignaturasSeleccionadas.get(i).getHorarioTeoria().size(); j++)
            {
                int dia = asignaturasSeleccionadas.get(i).getHorarioPractica().get(j).getDia();
                asignaturaActual = asignaturaActual + diaDeLaSemana( dia );
                asignaturaActual = asignaturaActual + " ";
                asignaturaActual = asignaturaActual + asignaturasSeleccionadas.get(i).getHorarioPractica().get(j).getHInicio();
                asignaturaActual = asignaturaActual + " ";
            }

            asignaturaActual = asignaturaActual + "\n\n";
            
            listaAsignaturasSeleccionadas.setText(listaAsignaturasSeleccionadas.getText() + asignaturaActual);

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AsignaturaASeleccionar;
    private javax.swing.JButton borrarSeleccionadas;
    private javax.swing.JTextField coincidenAsignaturas;
    private javax.swing.JButton comprobarAsignaturas;
    private javax.swing.JButton generarHorario;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea listaAsignaturas;
    private javax.swing.JTextArea listaAsignaturasSeleccionadas;
    private javax.swing.JButton meterAsignatura;
    // End of variables declaration//GEN-END:variables
}
